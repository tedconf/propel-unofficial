<?php

/*
 *  $Id$
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This software consists of voluntary contributions made by many individuals
 * and is licensed under the LGPL. For more information please see
 * <http://propel.phpdb.org>.
 */

require_once 'propel/engine/builder/om/PeerBuilder.php';

/**
 * Generates a PHP5 base Peer class for user object model (OM).
 * 
 * This class produces the base peer class (e.g. BaseMyPeer) which contains all
 * the custom-built query and manipulator methods.
 * 
 * This class replaces the Peer.tpl, with the intent of being easier for users
 * to customize (through extending & overriding).
 * 
 * @author Hans Lellelid <hans@xmpl.org>
 * @package propel.engine.builder.om.php5
 */
class PHP5BasicPeerBuilder extends PeerBuilder {		
	
// Bugs that are being fixed while porting Peer.tpl to this class:
//	- ability to override the constants
//	- ability to have emulation for both CASCADE and SETNULL
//	-

	/**
	 * The name of the PHP class being built.
	 * @var string
	 */
	protected $classname;
	
	/**
	 * Adds the include() statements for files that this class depends on or utilizes.
	 * @param string &$script The script will be modified in this method.
	 */
	protected function addIncludes(&$script) {
		
		$table = $this->getTable();		
				
		$parentClass = $this->getBaseClass();
		$script .= "
require_once '".$this->getFilePath($parentClass)."';
";
		
		$interface = ClassTools::getInterface($table);

		if (!empty($interface)) {
			$script .= "
require_once '".$this->getFilePath($interface)."';
";
		}
	
		
		if (!$table->isAlias()) {

			// If any columns in table are BLOB or CLOB then we need to make
			// sure those classes are included so we can do things like 
			// if ($v instanceof Lob) etc.
	
			$includes_lobs = false;
			foreach ($table->getColumns() as $col) {
				if ($col->isLob()) {
					$includes_lobs = true;
					break;
				}
			}
			
			if($includes_lobs) {
				$script .= "
include_once 'creole/util/Clob.php';
include_once 'creole/util/Blob.php';
";
			}
		} // if table is not alias

		$script .= "

include_once 'propel/util/Criteria.php';
";	

		$script .= "
include_once '".$this->getFilePath($package, $table->getPhpName() . 'Peer') ?>';
	
	} // addIncludes()
	
	/**
	 * Adds class phpdoc comment and openning of class.
	 * @param string &$script The script will be modified in this method.
	 */
	protected function addClassOpen(&$script) {
		
		$tableName = $this->getTable()->getName();
		$tableDesc = $this->getTable()->getDescription();
		
		$this->classname = $this->getBuildProperty('basePrefix') . $table->getPhpName();
		
		$script .= "
/**
 * Base class that represents a row from the '$tableName' table.
 *
 * $tableDesc
 *";
		if ($this->getBuildProperty('addTimeStamp')) {
			$now = strftime('%c');
			$script .= "
 * This class was autogenerated by Propel on:
 *
 * $now
 *";
		}
		$script .= "
 * @package ".$this->getPackage()."
 */	
abstract class ".$this->classname." {
";
	}
	
	/**
	 * Closes class.
	 * @param string &$script The script will be modified in this method.
	 */	
	protected function addClassClose(&$script) {
		$script .= "
} // " . $this->classname . "
";
	}
	
	/**
	 * Adds variables that store column values.
	 * @param string &$script The script will be modified in this method.
	 * @see addColumnNameConstants()
	 */
	protected function addColumnAttributes(&$script) {
		
				
	}	
} // PHP5BasicPeerBuilder
